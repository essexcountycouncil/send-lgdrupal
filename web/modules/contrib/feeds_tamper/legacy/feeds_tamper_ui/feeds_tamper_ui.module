<?php

/**
 * @file
 * Feeds Tamper UI - Defines the user interface for Feeds Tamper.
 */


/**
 * Menu loader callback for grabbing the source from the URL.
 */
function feeds_tamper_ui_source_load($source) {
  // We've HEX encoded the source to allow all possible characters.
  return pack('H*', $source);
}

/**
 * Implements hook_form_FORM_ID_alter().
 *
 * Modify feeds_ui_overview_form(), adding Tamper links if the user has access.
 */
function feeds_tamper_ui_form_feeds_ui_overview_form_alter(&$form, &$form_state) {
  if (!empty($form['enabled'])) {
    foreach ($form['enabled'] as $id => &$table) {
      if (feeds_tamper_access($id)) {
        $table['operations']['#markup'] .= ' | ' . l(t('Tamper'), "admin/structure/feeds/$id/tamper");
      }
    }
  }
}

/**
 * Calculate display name for source.
 *
 * @param stdClass $instance
 *   A plugin instance object.
 *
 * @return string
 *   The unsanitized name to display for a Feeds source.
 */
function feeds_tamper_ui_source_name(stdClass $instance) {
  $importer = feeds_importer($instance->importer);
  $sources = $importer->parser->getMappingSources();
  return !empty($sources[$instance->source]['name']) ? $sources[$instance->source]['name'] : $instance->source;
}
